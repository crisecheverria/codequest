[
  {
    "name": "Variables",
    "slug": "variables-ts",
    "description": "Learn how to declare and use variables to store data in memory.",
    "category": "fundamentals",
    "language": "typescript",
    "order": 1,
    "dependencies": [],
    "resources": [
      {
        "title": "JavaScript Variables",
        "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#Variables",
        "type": "documentation"
      },
      {
        "title": "TypeScript Basic Types",
        "url": "https://www.typescriptlang.org/docs/handbook/basic-types.html",
        "type": "documentation"
      }
    ]
  },
  {
    "name": "Operators",
    "slug": "operators",
    "description": "Learn about arithmetic, comparison, and logical operators.",
    "category": "fundamentals",
    "language": "typescript",
    "order": 2,
    "dependencies": ["variables"],
    "resources": [
      {
        "title": "JavaScript Operators",
        "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators",
        "type": "documentation"
      }
    ]
  },
  {
    "name": "Conditionals",
    "slug": "conditionals",
    "description": "Learn how to control program flow with if/else statements and switch cases.",
    "category": "fundamentals",
    "language": "typescript",
    "order": 3,
    "dependencies": ["operators"],
    "resources": [
      {
        "title": "JavaScript if...else",
        "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/if...else",
        "type": "documentation"
      }
    ]
  },
  {
    "name": "Loops",
    "slug": "loops",
    "description": "Learn how to iterate using for, while, and do-while loops.",
    "category": "fundamentals",
    "language": "typescript",
    "order": 4,
    "dependencies": ["conditionals"],
    "resources": [
      {
        "title": "JavaScript Loops",
        "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Loops_and_iteration",
        "type": "documentation"
      }
    ]
  },
  {
    "name": "Arrays",
    "slug": "arrays",
    "description": "Learn how to work with arrays and array methods.",
    "category": "fundamentals",
    "language": "typescript",
    "order": 5,
    "dependencies": ["loops"],
    "resources": [
      {
        "title": "JavaScript Arrays",
        "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
        "type": "documentation"
      },
      {
        "title": "TypeScript Array Types",
        "url": "https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#arrays",
        "type": "documentation"
      }
    ]
  },
  {
    "name": "Strings",
    "slug": "strings",
    "description": "Learn how to work with text using string methods and properties.",
    "category": "fundamentals",
    "language": "typescript",
    "order": 6,
    "dependencies": ["variables"],
    "resources": [
      {
        "title": "JavaScript Strings",
        "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
        "type": "documentation"
      }
    ]
  },
  {
    "name": "Functions",
    "slug": "functions",
    "description": "Learn how to define and call functions, pass parameters, and return values.",
    "category": "fundamentals",
    "language": "typescript",
    "order": 7,
    "dependencies": ["variables", "operators"],
    "resources": [
      {
        "title": "JavaScript Functions",
        "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions",
        "type": "documentation"
      },
      {
        "title": "TypeScript Functions",
        "url": "https://www.typescriptlang.org/docs/handbook/2/functions.html",
        "type": "documentation"
      }
    ]
  },
  {
    "name": "Objects",
    "slug": "objects",
    "description": "Learn how to create and manipulate objects and object properties.",
    "category": "fundamentals",
    "language": "typescript",
    "order": 8,
    "dependencies": ["functions"],
    "resources": [
      {
        "title": "JavaScript Objects",
        "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects",
        "type": "documentation"
      },
      {
        "title": "TypeScript Object Types",
        "url": "https://www.typescriptlang.org/docs/handbook/2/objects.html",
        "type": "documentation"
      }
    ]
  },
  {
    "name": "Recursion",
    "slug": "recursion",
    "description": "Learn how to write functions that call themselves to solve complex problems.",
    "category": "intermediate",
    "language": "typescript",
    "order": 9,
    "dependencies": ["functions"],
    "resources": [
      {
        "title": "Understanding Recursion",
        "url": "https://developer.mozilla.org/en-US/docs/Glossary/Recursion",
        "type": "documentation"
      }
    ]
  },
  {
    "name": "Functional Programming",
    "slug": "functional-programming",
    "description": "Learn the fundamentals of functional programming, a declarative paradigm where programs are constructed by applying and composing functions.",
    "category": "intermediate",
    "language": "typescript",
    "order": 10,
    "dependencies": ["functions", "arrays"],
    "resources": [
      {
        "title": "Functional Programming in JavaScript",
        "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functional_programming",
        "type": "documentation"
      }
    ]
  },
  {
    "name": "Map Function",
    "slug": "map",
    "description": "Learn how to transform arrays by applying a function to each element using the map method.",
    "category": "intermediate",
    "language": "typescript",
    "order": 11,
    "dependencies": ["functional-programming", "arrays"],
    "resources": [
      {
        "title": "JavaScript Array.prototype.map()",
        "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map",
        "type": "documentation"
      }
    ]
  },
  {
    "name": "Filter Function",
    "slug": "filter",
    "description": "Learn how to create new arrays with elements that pass a test function using the filter method.",
    "category": "intermediate",
    "language": "typescript",
    "order": 12,
    "dependencies": ["functional-programming", "arrays"],
    "resources": [
      {
        "title": "JavaScript Array.prototype.filter()",
        "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter",
        "type": "documentation"
      }
    ]
  },
  {
    "name": "Reduce Function",
    "slug": "reduce",
    "description": "Learn how to reduce an array to a single value by applying a function to each element and accumulating the result.",
    "category": "intermediate",
    "language": "typescript",
    "order": 13,
    "dependencies": ["functional-programming", "arrays"],
    "resources": [
      {
        "title": "JavaScript Array.prototype.reduce()",
        "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce",
        "type": "documentation"
      }
    ]
  },
  {
    "name": "Higher-Order Functions",
    "slug": "higher-order-functions",
    "description": "Learn about functions that take other functions as arguments or return functions as results.",
    "category": "advanced",
    "language": "typescript",
    "order": 14,
    "dependencies": ["functional-programming"],
    "resources": [
      {
        "title": "Higher-Order Functions in JavaScript",
        "url": "https://developer.mozilla.org/en-US/docs/Glossary/First-class_Function",
        "type": "documentation"
      }
    ]
  },
  {
    "name": "List Algorithms",
    "slug": "list-algorithms",
    "description": "Understand and implement essential algorithms on lists (arrays), including search techniques, duplication checks, and order verification.",
    "category": "algorithms",
    "language": "typescript",
    "order": 15,
    "dependencies": ["arrays"],
    "resources": [
      {
        "title": "MDN - JavaScript Arrays",
        "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
        "type": "documentation"
      },
      {
        "title": "GeeksforGeeks - Linear Search",
        "url": "https://www.geeksforgeeks.org/linear-search/",
        "type": "article"
      },
      {
        "title": "GeeksforGeeks - Binary Search",
        "url": "https://www.geeksforgeeks.org/binary-search/",
        "type": "article"
      },
      {
        "title": "JavaScript Algorithms - GitHub",
        "url": "https://github.com/trekhleb/javascript-algorithms",
        "type": "repository"
      }
    ]
  },
  {
    "name": "Deep Comparison",
    "slug": "deep-comparison",
    "description": "Learn how to compare complex data structures like nested objects and arrays for structural and value equality.",
    "category": "intermediate",
    "language": "all",
    "order": 16,
    "dependencies": ["objects", "recursion"],
    "resources": [
      {
        "title": "Object Equality in JavaScript",
        "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness",
        "type": "documentation"
      },
      {
        "title": "Deep Comparison in JavaScript",
        "url": "https://javascript.info/object-copy#comparison-by-reference",
        "type": "article"
      }
    ]
  },
  {
    "name": "Memoization",
    "slug": "memoization",
    "description": "Learn how to optimize recursive or expensive functions by caching results of previous calls.",
    "category": "advanced",
    "language": "all",
    "order": 17,
    "dependencies": ["functions", "recursion", "objects"],
    "resources": [
      {
        "title": "Memoization in JavaScript",
        "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments",
        "type": "documentation"
      },
      {
        "title": "Understanding Memoization in JavaScript",
        "url": "https://www.freecodecamp.org/news/understanding-memoize-in-javascript-51d07d19430e/",
        "type": "article"
      }
    ]
  },
  {
    "name": "Variables & Basic Types",
    "slug": "variables-go",
    "description": "Learn how to declare variables and work with Go's basic types like int, string, bool, and float64.",
    "category": "fundamentals",
    "language": "go",
    "order": 1,
    "dependencies": [],
    "resources": [
      {
        "title": "Go Basic Types",
        "url": "https://tour.golang.org/basics/11",
        "type": "documentation"
      },
      {
        "title": "Variables in Go",
        "url": "https://golang.org/doc/effective_go#variables",
        "type": "documentation"
      }
    ]
  },
  {
    "name": "Constants & Enums",
    "slug": "constants-go",
    "description": "Learn how to declare constants and create enumerated types using const and iota in Go.",
    "category": "fundamentals",
    "language": "go",
    "order": 2,
    "dependencies": ["variables-go"],
    "resources": [
      {
        "title": "Go Constants",
        "url": "https://tour.golang.org/basics/15",
        "type": "documentation"
      },
      {
        "title": "Iota in Go",
        "url": "https://golang.org/ref/spec#Iota",
        "type": "documentation"
      }
    ]
  },
  {
    "name": "Functions",
    "slug": "functions-go",
    "description": "Learn how to define functions, handle multiple return values, and work with variadic parameters in Go.",
    "category": "fundamentals",
    "language": "go",
    "order": 3,
    "dependencies": ["variables-go"],
    "resources": [
      {
        "title": "Go Functions",
        "url": "https://tour.golang.org/basics/4",
        "type": "documentation"
      },
      {
        "title": "Multiple Return Values",
        "url": "https://tour.golang.org/basics/6",
        "type": "documentation"
      }
    ]
  },
  {
    "name": "Conditional Statements",
    "slug": "conditionals-go",
    "description": "Learn how to control program flow with if/else statements and switch cases in Go.",
    "category": "fundamentals",
    "language": "go",
    "order": 4,
    "dependencies": ["functions-go"],
    "resources": [
      {
        "title": "Go If Statements",
        "url": "https://tour.golang.org/flowcontrol/5",
        "type": "documentation"
      },
      {
        "title": "Go Switch Statements",
        "url": "https://tour.golang.org/flowcontrol/9",
        "type": "documentation"
      }
    ]
  },
  {
    "name": "Loops",
    "slug": "loops-go",
    "description": "Learn how to iterate using for loops and range in Go.",
    "category": "fundamentals",
    "language": "go",
    "order": 5,
    "dependencies": ["conditionals-go"],
    "resources": [
      {
        "title": "Go For Loops",
        "url": "https://tour.golang.org/flowcontrol/1",
        "type": "documentation"
      },
      {
        "title": "Go Range",
        "url": "https://tour.golang.org/moretypes/16",
        "type": "documentation"
      }
    ]
  },
  {
    "name": "Arrays",
    "slug": "arrays-go",
    "description": "Learn how to work with fixed-size arrays in Go.",
    "category": "fundamentals",
    "language": "go",
    "order": 6,
    "dependencies": ["loops-go"],
    "resources": [
      {
        "title": "Go Arrays",
        "url": "https://tour.golang.org/moretypes/6",
        "type": "documentation"
      }
    ]
  },
  {
    "name": "Slices",
    "slug": "slices-go",
    "description": "Learn how to work with dynamic arrays (slices) in Go, including append, copy, and slice operations.",
    "category": "fundamentals",
    "language": "go",
    "order": 7,
    "dependencies": ["arrays-go"],
    "resources": [
      {
        "title": "Go Slices",
        "url": "https://tour.golang.org/moretypes/7",
        "type": "documentation"
      },
      {
        "title": "Slices: usage and internals",
        "url": "https://golang.org/blog/slices",
        "type": "article"
      }
    ]
  },
  {
    "name": "Maps",
    "slug": "maps-go",
    "description": "Learn how to work with key-value pairs using maps in Go.",
    "category": "fundamentals",
    "language": "go",
    "order": 8,
    "dependencies": ["slices-go"],
    "resources": [
      {
        "title": "Go Maps",
        "url": "https://tour.golang.org/moretypes/19",
        "type": "documentation"
      }
    ]
  },
  {
    "name": "Structs",
    "slug": "structs-go",
    "description": "Learn how to define and use custom types with structs in Go.",
    "category": "fundamentals",
    "language": "go",
    "order": 9,
    "dependencies": ["maps-go"],
    "resources": [
      {
        "title": "Go Structs",
        "url": "https://tour.golang.org/moretypes/2",
        "type": "documentation"
      }
    ]
  },
  {
    "name": "Pointers & Methods",
    "slug": "pointers-methods-go",
    "description": "Learn about pointers and how to define methods on structs in Go.",
    "category": "intermediate",
    "language": "go",
    "order": 10,
    "dependencies": ["structs-go"],
    "resources": [
      {
        "title": "Go Pointers",
        "url": "https://tour.golang.org/moretypes/1",
        "type": "documentation"
      },
      {
        "title": "Go Methods",
        "url": "https://tour.golang.org/methods/1",
        "type": "documentation"
      }
    ]
  }
]
